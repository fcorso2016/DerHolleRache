//============================================================================
// * UGameBattler
//----------------------------------------------------------------------------
// Creates many of the base functionality for battlers as they function in
// battle. This class serves as the superclass for UGameHero and UGameEnemy.
//============================================================================
#include "GameBattler.h"
#include <string>
#include <cmath>

//----------------------------------------------------------------------------
// * Object Initialization
//----------------------------------------------------------------------------
UGameBattler::UGameBattler() {
}

//----------------------------------------------------------------------------
// * Object Destruction
//----------------------------------------------------------------------------
UGameBattler::~UGameBattler() {

}

//----------------------------------------------------------------------------
// * Setup
//----------------------------------------------------------------------------
void UGameBattler::setup(int id) {
	initBattler();
	initHpAndMp();
}

//----------------------------------------------------------------------------
// * Init Basic Properties of the Battler
//----------------------------------------------------------------------------
void UGameBattler::initBattler() {
	for (int i = 0; i < 8; i++) {
		stats[i] = 0;
		statPlus[i] = 0;
	}
}

//----------------------------------------------------------------------------
// * Init Basic Properties of the Battler
//----------------------------------------------------------------------------
void UGameBattler::initHpAndMp() {
	hp = GetMaxHP();
	mp = GetMaxMP();
}

//----------------------------------------------------------------------------
// * Return a Base Stat for a Battler
//----------------------------------------------------------------------------
int UGameBattler::GetID() {
	return id;
}

//----------------------------------------------------------------------------
// * Return a Base Stat for a Battler
//----------------------------------------------------------------------------
int UGameBattler::GetStatBase(int id) {
	return stats[id];
}

//----------------------------------------------------------------------------
// * Return a Stat for a Battler
//----------------------------------------------------------------------------
int UGameBattler::GetStatPlus(int id) {
	return statPlus[id];
}

//----------------------------------------------------------------------------
// * Return a Stat for a Battler
//----------------------------------------------------------------------------
int UGameBattler::GetStat(int id) {
	return GetStatBase(id) + this->GetStatPlus(id);
}

//----------------------------------------------------------------------------
// * Get HP
//----------------------------------------------------------------------------
int UGameBattler::GetCurrentHP() {
	return hp;
}

//----------------------------------------------------------------------------
// * Get HP
//----------------------------------------------------------------------------
int UGameBattler::GetMaxHP() {
	return GetStat(0);
}

//----------------------------------------------------------------------------
// * Change HP
//----------------------------------------------------------------------------
void UGameBattler::ChangeHP(int newHp) {
	hp = newHp;
	if (hp <= 0) {
		die();
	}
}

//----------------------------------------------------------------------------
// * Get MP
//----------------------------------------------------------------------------
int UGameBattler::GetCurrentMP() {
	return mp;
}

//----------------------------------------------------------------------------
// * Get MP
//----------------------------------------------------------------------------
int UGameBattler::GetMaxMP() {
	return GetStat(1);
}

//----------------------------------------------------------------------------
// * Change MP
//----------------------------------------------------------------------------
void UGameBattler::ChangeMP(int newMp) {
	mp = newMp;
}

//----------------------------------------------------------------------------
// * Get Attack
//----------------------------------------------------------------------------
int UGameBattler::GetAttack() {
	return GetStat(2);
}

//----------------------------------------------------------------------------
// * Get Defense
//----------------------------------------------------------------------------
int UGameBattler::GetDefense() {
	return GetStat(3);
}

//----------------------------------------------------------------------------
// * Get Magic
//----------------------------------------------------------------------------
int UGameBattler::GetMagic() {
	return GetStat(4);
}

//----------------------------------------------------------------------------
// * Get Resistance
//----------------------------------------------------------------------------
int UGameBattler::GetResistance() {
	return GetStat(5);
}

//----------------------------------------------------------------------------
// * Get Speed
//----------------------------------------------------------------------------
int UGameBattler::GetSpeed() {
	return GetStat(6);
}

//----------------------------------------------------------------------------
// * Get Luck
//----------------------------------------------------------------------------
int UGameBattler::GetLuck() {
	return GetStat(7);
}

//----------------------------------------------------------------------------
// * Return a Stat for a Battler
//----------------------------------------------------------------------------
TArray<UGameStatus*> UGameBattler::GetStatusConditions() {
	return StatusConditions;
}

//----------------------------------------------------------------------------
// * Take Damage
//----------------------------------------------------------------------------
void UGameBattler::TakeDamage(int amt) {
	ChangeHP(fmax(fmin(GetMaxHP(), hp - amt), 0));
}

//----------------------------------------------------------------------------
// * Heal
//----------------------------------------------------------------------------
void UGameBattler::Heal(int amt) {
	TakeDamage(-amt);
}

//----------------------------------------------------------------------------
// * Take Damage
//----------------------------------------------------------------------------
void UGameBattler::TakeMPDamage(int amt) {
	ChangeMP(fmax(fmin(GetMaxMP(), mp - amt), 0));
}

//----------------------------------------------------------------------------
// * Heal
//----------------------------------------------------------------------------
void UGameBattler::HealMP(int amt) {
	TakeMPDamage(-amt);
}

//----------------------------------------------------------------------------
// * Return a Stat for a Battler
//----------------------------------------------------------------------------
void UGameBattler::AddStatus(int id) {
	StatusConditions.Add(USystemControl::GetStatus(id, gameInstance));
}

//----------------------------------------------------------------------------
// * Return a Stat for a Battler
//----------------------------------------------------------------------------
void UGameBattler::RemoveStatus(int id) {
	StatusConditions.Remove(USystemControl::GetStatus(id, gameInstance));
}

//----------------------------------------------------------------------------
// * Return a Stat for a Battler
//----------------------------------------------------------------------------
void UGameBattler::ClearStatusConditions() {
	for (int i = 0; i < StatusConditions.Num(); i++) {
		StatusConditions.RemoveAt(i);
	}
}

//----------------------------------------------------------------------------
// * Die
//----------------------------------------------------------------------------
void UGameBattler::die() {
	hp = 0;
	ClearStatusConditions();
}

//----------------------------------------------------------------------------
// * Is Dead?
//----------------------------------------------------------------------------
bool UGameBattler::IsDead() {
	return hp == 0;
}

//----------------------------------------------------------------------------
// * Is Hero?
//----------------------------------------------------------------------------
bool UGameBattler::IsHero() {
	return false;
}

//----------------------------------------------------------------------------
// * Is Enemy?
//----------------------------------------------------------------------------
bool UGameBattler::IsEnemy() {
	return false;
}

//----------------------------------------------------------------------------
// * Evaluate a Critical Hit
//----------------------------------------------------------------------------
bool UGameBattler::CheckCrit(UGameAction *action) {
	if (FMath::RandRange(1, 100) <= GetLuck()) {
		return true;
	} else {
		return false;
	}
}

//----------------------------------------------------------------------------
// * Pay Action Cost
//----------------------------------------------------------------------------
void UGameBattler::PayCost(FString type, int id) {
	std::string trueType(TCHAR_TO_UTF8(*type));
	PayCost(trueType[0], id);
}

void UGameBattler::PayCost(char type, int id) {
	switch (type) {
	case 'A':
		TakeMPDamage(USystemControl::GetAbility(id, gameInstance)->GetMPCost());
		break;
	case 'I':
		// Implemented in subclasses
		break;
	default:
		// No cost to pay as action is neither a skill nor an item.
		break;
	}
}

//----------------------------------------------------------------------------
// * Get Accuracy
//----------------------------------------------------------------------------
float UGameBattler::GetAccuracy() {
	return 1.0f;
}

//----------------------------------------------------------------------------
// * Get Block Rate
//----------------------------------------------------------------------------
float UGameBattler::GetBlockRate() {
	return 0.0f;
}

//----------------------------------------------------------------------------
// * Begin Guarding
//----------------------------------------------------------------------------
void UGameBattler::BeginGuarding() {
	guarding = true;
}

//----------------------------------------------------------------------------
// * End Guarding
//----------------------------------------------------------------------------
void UGameBattler::EndGuarding() {
	guarding = false;
}


//----------------------------------------------------------------------------
// * Is Guarding?
//----------------------------------------------------------------------------
bool UGameBattler::IsGuarding() {
	return guarding;
}

//----------------------------------------------------------------------------
// * Is Guarding?
//----------------------------------------------------------------------------
float UGameBattler::ElementRate(int id) {
	return 1.0f;
}