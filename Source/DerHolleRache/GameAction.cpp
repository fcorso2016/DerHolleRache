//============================================================================
// * UGameAction
//----------------------------------------------------------------------------
// Sets up actions for usage by battlers.
//============================================================================
#include "GameAction.h"
#include <cmath>

//----------------------------------------------------------------------------
// * Class Variables
//----------------------------------------------------------------------------
FData_Action UGameAction::DummyAction;

//----------------------------------------------------------------------------
// * Object Initialization
//----------------------------------------------------------------------------
UGameAction::UGameAction() {

}

//----------------------------------------------------------------------------
// * Object Destruction
//----------------------------------------------------------------------------
UGameAction::~UGameAction() {

}

//----------------------------------------------------------------------------
// * Setup
//----------------------------------------------------------------------------
void UGameAction::setID(int id) {
	this->id = id;
}

//----------------------------------------------------------------------------
// * Get ID
//----------------------------------------------------------------------------
int UGameAction::GetID() {
	return getActionData().id;
}

//----------------------------------------------------------------------------
// * Get Name
//----------------------------------------------------------------------------
FName UGameAction::GetName() {
	return getActionData().name;
}

//----------------------------------------------------------------------------
// * Get Description
//----------------------------------------------------------------------------
FText UGameAction::GetDescription() {
	return getActionData().description;
}

//----------------------------------------------------------------------------
// * Get Category
//----------------------------------------------------------------------------
int UGameAction::GetCategory() {
	return getActionData().category;
}

//----------------------------------------------------------------------------
// * Get Power
//----------------------------------------------------------------------------
int UGameAction::GetPower() {
	return getActionData().power;
}

//----------------------------------------------------------------------------
// * Get Accuracy
//----------------------------------------------------------------------------
float UGameAction::GetAccuracy() {
	return getActionData().accuracy;
}

//----------------------------------------------------------------------------
// * Get Function Code
//----------------------------------------------------------------------------
int UGameAction::GetFunctionCode() {
	return getActionData().functionCode;
}

//----------------------------------------------------------------------------
// * Get Target
//----------------------------------------------------------------------------
int UGameAction::GetTarget() {
	return getActionData().target;
}

//----------------------------------------------------------------------------
// * Get Elements
//----------------------------------------------------------------------------
TArray<int> UGameAction::GetElements() {
	return getActionData().elements;
}

//----------------------------------------------------------------------------
// * Check if Usable in the Field
//----------------------------------------------------------------------------
bool UGameAction::UsableInField() {
	return getActionData().fieldUsable;
}

//----------------------------------------------------------------------------
// * Check if Usable in Battle
//----------------------------------------------------------------------------
bool UGameAction::UsableInBattle() {
	return getActionData().battleUsable;
}

//----------------------------------------------------------------------------
// * Evaluate Damage
//----------------------------------------------------------------------------
int UGameAction::EvalDamage(int atk, int def, float rate, bool crit, bool guard) {
	int dmg = GetPower() + atk - def;
	if (crit) {
		dmg *= 3;
		dmg /= 2;
	}
	if (guard) {
		dmg /= 2;
	}
	float temp = dmg * rate;
	dmg = round(temp);
	return fmax(dmg, 0);
}

//----------------------------------------------------------------------------
// * Evaluate Hit
//----------------------------------------------------------------------------
bool UGameAction::EvalHit(float weaponAccuracy, float blockRate) {
	if (GetAccuracy() == 0.0f) {
		return true;
	} else if (FMath::RandRange(0.0f, 1.0f) < GetAccuracy() * weaponAccuracy) {
		if (FMath::RandRange(0.0f, 1.0f) < blockRate) {
			return false;
		} else {
			return true;
		}
	} else {
		return false;
	}
}

//----------------------------------------------------------------------------
// * Get Action Data
//----------------------------------------------------------------------------
FData_Action UGameAction::getActionData() {
	return DummyAction;
}

//----------------------------------------------------------------------------
// * Does this Action Need Target Selection
//----------------------------------------------------------------------------
bool UGameAction::NeedsSelection() {
	switch (getActionData().target) {
	case 0: // Single Target but User
	case 2: // Single Random Foe
	case 200: // Single Battler on User's Side
		return true;
	default:
		return false;
	}
}

//----------------------------------------------------------------------------
// * Is this an Ability?
//----------------------------------------------------------------------------
bool UGameAction::IsAbility() {
	return false;
}

//----------------------------------------------------------------------------
// * Is this an Item?
//----------------------------------------------------------------------------
bool UGameAction::IsItem() {
	return false;
}